# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'ui_main.ui'
##
## Created by: Qt User Interface Compiler version 5.15.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *

import resource_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(800, 600)
        MainWindow.setMaximumSize(QSize(800, 600))
        MainWindow.setIconSize(QSize(24, 24))
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.horizontalLayout = QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.tabWidget = QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName(u"tabWidget")
        self.tabWidget.setEnabled(True)
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QSize(0, 0))
        font = QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setTabShape(QTabWidget.Rounded)
        self.tabWidget.setIconSize(QSize(16, 16))
        self.tab = QWidget()
        self.tab.setObjectName(u"tab")
        font1 = QFont()
        font1.setPointSize(10)
        self.tab.setFont(font1)
        self.tab.setAutoFillBackground(True)
        self.rho = QLabel(self.tab)
        self.rho.setObjectName(u"rho")
        self.rho.setGeometry(QRect(30, 240, 64, 18))
        sizePolicy1 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.rho.sizePolicy().hasHeightForWidth())
        self.rho.setSizePolicy(sizePolicy1)
        font2 = QFont()
        font2.setPointSize(11)
        self.rho.setFont(font2)
        self.rho.setToolTipDuration(-1)
        self.browse_input_button = QPushButton(self.tab)
        self.browse_input_button.setObjectName(u"browse_input_button")
        self.browse_input_button.setGeometry(QRect(450, 440, 81, 21))
        self.browse_input_button.setFont(font1)
        self.browse_input_button.setAutoFillBackground(True)
        self.browse_input_button.setStyleSheet(u"")
        self.rho_box = QSpinBox(self.tab)
        self.rho_box.setObjectName(u"rho_box")
        self.rho_box.setGeometry(QRect(200, 240, 91, 22))
        sizePolicy2 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Preferred)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.rho_box.sizePolicy().hasHeightForWidth())
        self.rho_box.setSizePolicy(sizePolicy2)
        self.rho_box.setMinimum(1)
        self.rho_box.setMaximum(10000)
        self.tao_box = QSpinBox(self.tab)
        self.tao_box.setObjectName(u"tao_box")
        self.tao_box.setGeometry(QRect(200, 280, 91, 22))
        sizePolicy2.setHeightForWidth(self.tao_box.sizePolicy().hasHeightForWidth())
        self.tao_box.setSizePolicy(sizePolicy2)
        self.tao_box.setMinimum(1)
        self.tao_box.setMaximum(10000)
        self.tao = QLabel(self.tab)
        self.tao.setObjectName(u"tao")
        self.tao.setGeometry(QRect(30, 280, 64, 18))
        sizePolicy1.setHeightForWidth(self.tao.sizePolicy().hasHeightForWidth())
        self.tao.setSizePolicy(sizePolicy1)
        self.tao.setFont(font2)
        self.strands_data_length = QLabel(self.tab)
        self.strands_data_length.setObjectName(u"strands_data_length")
        self.strands_data_length.setGeometry(QRect(30, 320, 131, 18))
        sizePolicy1.setHeightForWidth(self.strands_data_length.sizePolicy().hasHeightForWidth())
        self.strands_data_length.setSizePolicy(sizePolicy1)
        self.strands_data_length.setFont(font2)
        self.b_force = QLabel(self.tab)
        self.b_force.setObjectName(u"b_force")
        self.b_force.setGeometry(QRect(30, 360, 101, 18))
        sizePolicy1.setHeightForWidth(self.b_force.sizePolicy().hasHeightForWidth())
        self.b_force.setSizePolicy(sizePolicy1)
        self.b_force.setFont(font2)
        self.strands_box = QSpinBox(self.tab)
        self.strands_box.setObjectName(u"strands_box")
        self.strands_box.setGeometry(QRect(200, 320, 91, 22))
        sizePolicy2.setHeightForWidth(self.strands_box.sizePolicy().hasHeightForWidth())
        self.strands_box.setSizePolicy(sizePolicy2)
        self.strands_box.setMinimum(1)
        self.strands_box.setMaximum(10000)
        self.b_force_box = QComboBox(self.tab)
        self.b_force_box.addItem("")
        self.b_force_box.addItem("")
        self.b_force_box.setObjectName(u"b_force_box")
        self.b_force_box.setGeometry(QRect(200, 360, 111, 22))
        sizePolicy1.setHeightForWidth(self.b_force_box.sizePolicy().hasHeightForWidth())
        self.b_force_box.setSizePolicy(sizePolicy1)
        self.test_input_file = QLabel(self.tab)
        self.test_input_file.setObjectName(u"test_input_file")
        self.test_input_file.setGeometry(QRect(29, 439, 101, 18))
        sizePolicy1.setHeightForWidth(self.test_input_file.sizePolicy().hasHeightForWidth())
        self.test_input_file.setSizePolicy(sizePolicy1)
        self.test_input_file.setFont(font2)
        self.run_button = QPushButton(self.tab)
        self.run_button.setObjectName(u"run_button")
        self.run_button.setGeometry(QRect(610, 460, 81, 31))
        self.run_button.setFont(font2)
        self.browse_input_line_edit = QLineEdit(self.tab)
        self.browse_input_line_edit.setObjectName(u"browse_input_line_edit")
        self.browse_input_line_edit.setGeometry(QRect(200, 439, 231, 21))
        self.infoccc = QLabel(self.tab)
        self.infoccc.setObjectName(u"infoccc")
        self.infoccc.setGeometry(QRect(750, 10, 21, 21))
        self.moreinfoccc = QLabel(self.tab)
        self.moreinfoccc.setObjectName(u"moreinfoccc")
        self.moreinfoccc.setGeometry(QRect(0, 520, 271, 16))
        self.moreinfoccc.setOpenExternalLinks(True)
        self.moreinforbck_5 = QLabel(self.tab)
        self.moreinforbck_5.setObjectName(u"moreinforbck_5")
        self.moreinforbck_5.setGeometry(QRect(530, 520, 271, 16))
        self.moreinforbck_5.setOpenExternalLinks(True)
        self.browse_output_line_edit = QLineEdit(self.tab)
        self.browse_output_line_edit.setObjectName(u"browse_output_line_edit")
        self.browse_output_line_edit.setGeometry(QRect(201, 470, 231, 21))
        self.browse_output_button = QPushButton(self.tab)
        self.browse_output_button.setObjectName(u"browse_output_button")
        self.browse_output_button.setGeometry(QRect(451, 471, 81, 21))
        self.browse_output_button.setFont(font1)
        self.browse_output_button.setAutoFillBackground(True)
        self.browse_output_button.setStyleSheet(u"")
        self.test_output_file = QLabel(self.tab)
        self.test_output_file.setObjectName(u"test_output_file")
        self.test_output_file.setGeometry(QRect(30, 470, 101, 18))
        sizePolicy1.setHeightForWidth(self.test_output_file.sizePolicy().hasHeightForWidth())
        self.test_output_file.setSizePolicy(sizePolicy1)
        self.test_output_file.setFont(font2)
        self.encode_decode = QLabel(self.tab)
        self.encode_decode.setObjectName(u"encode_decode")
        self.encode_decode.setGeometry(QRect(30, 399, 101, 18))
        sizePolicy1.setHeightForWidth(self.encode_decode.sizePolicy().hasHeightForWidth())
        self.encode_decode.setSizePolicy(sizePolicy1)
        self.encode_decode.setFont(font2)
        self.encode_decode_box = QComboBox(self.tab)
        self.encode_decode_box.addItem("")
        self.encode_decode_box.addItem("")
        self.encode_decode_box.setObjectName(u"encode_decode_box")
        self.encode_decode_box.setGeometry(QRect(200, 399, 111, 22))
        sizePolicy1.setHeightForWidth(self.encode_decode_box.sizePolicy().hasHeightForWidth())
        self.encode_decode_box.setSizePolicy(sizePolicy1)
        self.ccc_label = QLabel(self.tab)
        self.ccc_label.setObjectName(u"ccc_label")
        self.ccc_label.setGeometry(QRect(30, 190, 211, 21))
        font3 = QFont()
        font3.setPointSize(16)
        self.ccc_label.setFont(font3)
        self.generator_label = QLabel(self.tab)
        self.generator_label.setObjectName(u"generator_label")
        self.generator_label.setGeometry(QRect(30, 20, 261, 21))
        self.generator_label.setFont(font3)
        self.gen_output_file = QLabel(self.tab)
        self.gen_output_file.setObjectName(u"gen_output_file")
        self.gen_output_file.setGeometry(QRect(30, 150, 101, 18))
        sizePolicy1.setHeightForWidth(self.gen_output_file.sizePolicy().hasHeightForWidth())
        self.gen_output_file.setSizePolicy(sizePolicy1)
        self.gen_output_file.setFont(font2)
        self.browse_gen_output_line_edit = QLineEdit(self.tab)
        self.browse_gen_output_line_edit.setObjectName(u"browse_gen_output_line_edit")
        self.browse_gen_output_line_edit.setGeometry(QRect(201, 150, 231, 21))
        self.browse_gen_output_button = QPushButton(self.tab)
        self.browse_gen_output_button.setObjectName(u"browse_gen_output_button")
        self.browse_gen_output_button.setGeometry(QRect(451, 151, 81, 21))
        self.browse_gen_output_button.setFont(font1)
        self.browse_gen_output_button.setAutoFillBackground(True)
        self.browse_gen_output_button.setStyleSheet(u"")
        self.generate_button = QPushButton(self.tab)
        self.generate_button.setObjectName(u"generate_button")
        self.generate_button.setGeometry(QRect(610, 140, 81, 31))
        self.generate_button.setFont(font2)
        self.strand_len = QLabel(self.tab)
        self.strand_len.setObjectName(u"strand_len")
        self.strand_len.setGeometry(QRect(30, 110, 131, 18))
        sizePolicy1.setHeightForWidth(self.strand_len.sizePolicy().hasHeightForWidth())
        self.strand_len.setSizePolicy(sizePolicy1)
        self.strand_len.setFont(font2)
        self.strand_num = QLabel(self.tab)
        self.strand_num.setObjectName(u"strand_num")
        self.strand_num.setGeometry(QRect(30, 70, 64, 18))
        sizePolicy1.setHeightForWidth(self.strand_num.sizePolicy().hasHeightForWidth())
        self.strand_num.setSizePolicy(sizePolicy1)
        self.strand_num.setFont(font2)
        self.strand_num_box = QSpinBox(self.tab)
        self.strand_num_box.setObjectName(u"strand_num_box")
        self.strand_num_box.setGeometry(QRect(200, 70, 91, 22))
        sizePolicy2.setHeightForWidth(self.strand_num_box.sizePolicy().hasHeightForWidth())
        self.strand_num_box.setSizePolicy(sizePolicy2)
        self.strand_num_box.setMinimum(1)
        self.strand_num_box.setMaximum(10000)
        self.strand_len_box = QSpinBox(self.tab)
        self.strand_len_box.setObjectName(u"strand_len_box")
        self.strand_len_box.setGeometry(QRect(200, 110, 91, 22))
        sizePolicy2.setHeightForWidth(self.strand_len_box.sizePolicy().hasHeightForWidth())
        self.strand_len_box.setSizePolicy(sizePolicy2)
        self.strand_len_box.setMinimum(1)
        self.strand_len_box.setMaximum(10000)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QWidget()
        self.tab_2.setObjectName(u"tab_2")
        self.tab_2.setAutoFillBackground(True)
        self.label = QLabel(self.tab_2)
        self.label.setObjectName(u"label")
        self.label.setGeometry(QRect(140, 20, 81, 21))
        self.label.setFont(font3)
        self.line = QFrame(self.tab_2)
        self.line.setObjectName(u"line")
        self.line.setGeometry(QRect(370, 10, 20, 511))
        self.line.setFrameShape(QFrame.VLine)
        self.line.setFrameShadow(QFrame.Sunken)
        self.label_2 = QLabel(self.tab_2)
        self.label_2.setObjectName(u"label_2")
        self.label_2.setGeometry(QRect(530, 20, 81, 21))
        font4 = QFont()
        font4.setPointSize(16)
        font4.setItalic(False)
        font4.setUnderline(False)
        self.label_2.setFont(font4)
        self.sigma_len_label = QLabel(self.tab_2)
        self.sigma_len_label.setObjectName(u"sigma_len_label")
        self.sigma_len_label.setGeometry(QRect(30, 100, 101, 21))
        font5 = QFont()
        font5.setPointSize(12)
        self.sigma_len_label.setFont(font5)
        self.sigma_len_box = QSpinBox(self.tab_2)
        self.sigma_len_box.setObjectName(u"sigma_len_box")
        self.sigma_len_box.setGeometry(QRect(140, 100, 61, 22))
        self.sigma_len_box.setMinimum(1)
        self.balanced_knuth_encode_button = QPushButton(self.tab_2)
        self.balanced_knuth_encode_button.setObjectName(u"balanced_knuth_encode_button")
        self.balanced_knuth_encode_button.setGeometry(QRect(260, 280, 71, 21))
        self.output_label_knuth = QLabel(self.tab_2)
        self.output_label_knuth.setObjectName(u"output_label_knuth")
        self.output_label_knuth.setGeometry(QRect(30, 280, 71, 41))
        self.len_decoded_word = QLabel(self.tab_2)
        self.len_decoded_word.setObjectName(u"len_decoded_word")
        self.len_decoded_word.setGeometry(QRect(30, 470, 221, 31))
        self.len_encoded_word = QLabel(self.tab_2)
        self.len_encoded_word.setObjectName(u"len_encoded_word")
        self.len_encoded_word.setGeometry(QRect(30, 450, 221, 31))
        self.sigma_len_label_2 = QLabel(self.tab_2)
        self.sigma_len_label_2.setObjectName(u"sigma_len_label_2")
        self.sigma_len_label_2.setGeometry(QRect(420, 60, 101, 21))
        self.sigma_len_label_2.setFont(font5)
        self.sigma_len_box_2 = QSpinBox(self.tab_2)
        self.sigma_len_box_2.setObjectName(u"sigma_len_box_2")
        self.sigma_len_box_2.setGeometry(QRect(540, 60, 61, 22))
        self.sigma_len_box_2.setMinimum(1)
        self.len_encoded_word_for_dec = QLabel(self.tab_2)
        self.len_encoded_word_for_dec.setObjectName(u"len_encoded_word_for_dec")
        self.len_encoded_word_for_dec.setGeometry(QRect(420, 90, 161, 31))
        self.encode_word_box = QSpinBox(self.tab_2)
        self.encode_word_box.setObjectName(u"encode_word_box")
        self.encode_word_box.setGeometry(QRect(590, 90, 61, 22))
        self.balanced_decode_button = QPushButton(self.tab_2)
        self.balanced_decode_button.setObjectName(u"balanced_decode_button")
        self.balanced_decode_button.setGeometry(QRect(660, 280, 71, 21))
        self.output_label_knuth_2 = QLabel(self.tab_2)
        self.output_label_knuth_2.setObjectName(u"output_label_knuth_2")
        self.output_label_knuth_2.setGeometry(QRect(420, 280, 71, 41))
        self.knuth_text_encode = QPlainTextEdit(self.tab_2)
        self.knuth_text_encode.setObjectName(u"knuth_text_encode")
        self.knuth_text_encode.setGeometry(QRect(30, 130, 311, 131))
        self.knuth_text_encode.setFocusPolicy(Qt.StrongFocus)
        self.knuth_text_encode.setTabChangesFocus(True)
        self.knuth_text_encode.setOverwriteMode(False)
        self.knuth_text_encode_2 = QPlainTextEdit(self.tab_2)
        self.knuth_text_encode_2.setObjectName(u"knuth_text_encode_2")
        self.knuth_text_encode_2.setGeometry(QRect(30, 320, 311, 131))
        self.knuth_text_encode_2.setTabChangesFocus(True)
        self.knuth_text_decode = QPlainTextEdit(self.tab_2)
        self.knuth_text_decode.setObjectName(u"knuth_text_decode")
        self.knuth_text_decode.setGeometry(QRect(420, 130, 311, 131))
        self.knuth_text_decode.setFocusPolicy(Qt.StrongFocus)
        self.knuth_text_decode.setTabChangesFocus(True)
        self.knuth_text_decode_2 = QPlainTextEdit(self.tab_2)
        self.knuth_text_decode_2.setObjectName(u"knuth_text_decode_2")
        self.knuth_text_decode_2.setGeometry(QRect(420, 320, 311, 131))
        self.knuth_text_decode_2.setTabChangesFocus(True)
        self.infobck = QLabel(self.tab_2)
        self.infobck.setObjectName(u"infobck")
        self.infobck.setGeometry(QRect(750, 10, 21, 21))
        self.notebck = QLabel(self.tab_2)
        self.notebck.setObjectName(u"notebck")
        self.notebck.setGeometry(QRect(320, 100, 21, 21))
        self.notebck_2 = QLabel(self.tab_2)
        self.notebck_2.setObjectName(u"notebck_2")
        self.notebck_2.setGeometry(QRect(710, 100, 21, 21))
        self.moreinforbck = QLabel(self.tab_2)
        self.moreinforbck.setObjectName(u"moreinforbck")
        self.moreinforbck.setGeometry(QRect(0, 520, 271, 16))
        self.moreinforbck.setOpenExternalLinks(True)
        self.moreinforbck_4 = QLabel(self.tab_2)
        self.moreinforbck_4.setObjectName(u"moreinforbck_4")
        self.moreinforbck_4.setGeometry(QRect(530, 520, 271, 16))
        self.moreinforbck_4.setOpenExternalLinks(True)
        self.bck_to_file_button = QPushButton(self.tab_2)
        self.bck_to_file_button.setObjectName(u"bck_to_file_button")
        self.bck_to_file_button.setGeometry(QRect(260, 490, 81, 21))
        self.bck_to_file_button_2 = QPushButton(self.tab_2)
        self.bck_to_file_button_2.setObjectName(u"bck_to_file_button_2")
        self.bck_to_file_button_2.setGeometry(QRect(650, 490, 81, 21))
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.tab_3.setAutoFillBackground(True)
        self.label_4 = QLabel(self.tab_3)
        self.label_4.setObjectName(u"label_4")
        self.label_4.setGeometry(QRect(80, 30, 16, 16))
        self.n_spin_box = QSpinBox(self.tab_3)
        self.n_spin_box.setObjectName(u"n_spin_box")
        self.n_spin_box.setGeometry(QRect(100, 30, 51, 22))
        self.n_spin_box.setMaximum(1000)
        self.c_spin_box = QSpinBox(self.tab_3)
        self.c_spin_box.setObjectName(u"c_spin_box")
        self.c_spin_box.setGeometry(QRect(280, 30, 51, 22))
        self.c_spin_box.setMaximum(1000)
        self.label_9 = QLabel(self.tab_3)
        self.label_9.setObjectName(u"label_9")
        self.label_9.setGeometry(QRect(260, 30, 16, 16))
        self.d_spin_box = QSpinBox(self.tab_3)
        self.d_spin_box.setObjectName(u"d_spin_box")
        self.d_spin_box.setGeometry(QRect(450, 30, 51, 22))
        self.d_spin_box.setMaximum(1)
        self.label_10 = QLabel(self.tab_3)
        self.label_10.setObjectName(u"label_10")
        self.label_10.setGeometry(QRect(430, 30, 16, 16))
        self.p_spin_box = QSpinBox(self.tab_3)
        self.p_spin_box.setObjectName(u"p_spin_box")
        self.p_spin_box.setGeometry(QRect(620, 30, 51, 22))
        self.label_11 = QLabel(self.tab_3)
        self.label_11.setObjectName(u"label_11")
        self.label_11.setGeometry(QRect(600, 30, 16, 16))
        self.line_5 = QFrame(self.tab_3)
        self.line_5.setObjectName(u"line_5")
        self.line_5.setGeometry(QRect(370, 80, 20, 451))
        self.line_5.setFrameShape(QFrame.VLine)
        self.line_5.setFrameShadow(QFrame.Sunken)
        self.label_12 = QLabel(self.tab_3)
        self.label_12.setObjectName(u"label_12")
        self.label_12.setGeometry(QRect(150, 90, 71, 21))
        self.label_12.setFont(font3)
        self.shifted_encode_button = QPushButton(self.tab_3)
        self.shifted_encode_button.setObjectName(u"shifted_encode_button")
        self.shifted_encode_button.setGeometry(QRect(270, 300, 71, 21))
        self.output_label_knuth_5 = QLabel(self.tab_3)
        self.output_label_knuth_5.setObjectName(u"output_label_knuth_5")
        self.output_label_knuth_5.setGeometry(QRect(30, 310, 61, 41))
        self.output_label_knuth_5.setTextInteractionFlags(Qt.LinksAccessibleByMouse)
        self.label_13 = QLabel(self.tab_3)
        self.label_13.setObjectName(u"label_13")
        self.label_13.setGeometry(QRect(540, 90, 71, 21))
        self.label_13.setFont(font4)
        self.shifted_decode_button = QPushButton(self.tab_3)
        self.shifted_decode_button.setObjectName(u"shifted_decode_button")
        self.shifted_decode_button.setGeometry(QRect(660, 300, 71, 21))
        self.checkBox = QCheckBox(self.tab_3)
        self.checkBox.setObjectName(u"checkBox")
        self.checkBox.setGeometry(QRect(420, 130, 81, 31))
        self.checkBox.setFont(font1)
        self.checkBox.setLayoutDirection(Qt.RightToLeft)
        self.checkBox.setAutoFillBackground(False)
        self.u_spin_box = QSpinBox(self.tab_3)
        self.u_spin_box.setObjectName(u"u_spin_box")
        self.u_spin_box.setGeometry(QRect(680, 130, 51, 22))
        self.label_23 = QLabel(self.tab_3)
        self.label_23.setObjectName(u"label_23")
        self.label_23.setGeometry(QRect(660, 130, 16, 16))
        font6 = QFont()
        font6.setPointSize(7)
        self.label_23.setFont(font6)
        self.output_label_knuth_9 = QLabel(self.tab_3)
        self.output_label_knuth_9.setObjectName(u"output_label_knuth_9")
        self.output_label_knuth_9.setGeometry(QRect(420, 310, 61, 41))
        self.output_label_knuth_9.setTextInteractionFlags(Qt.LinksAccessibleByMouse)
        self.shifted_text_encode = QPlainTextEdit(self.tab_3)
        self.shifted_text_encode.setObjectName(u"shifted_text_encode")
        self.shifted_text_encode.setGeometry(QRect(30, 160, 311, 131))
        self.shifted_text_encode.setFocusPolicy(Qt.StrongFocus)
        self.shifted_text_encode.setTabChangesFocus(True)
        self.shifted_text_decode = QPlainTextEdit(self.tab_3)
        self.shifted_text_decode.setObjectName(u"shifted_text_decode")
        self.shifted_text_decode.setGeometry(QRect(420, 160, 311, 131))
        self.shifted_text_decode.setFocusPolicy(Qt.StrongFocus)
        self.shifted_text_decode.setTabChangesFocus(True)
        self.shifted_text_encode_2 = QPlainTextEdit(self.tab_3)
        self.shifted_text_encode_2.setObjectName(u"shifted_text_encode_2")
        self.shifted_text_encode_2.setGeometry(QRect(30, 350, 311, 131))
        self.shifted_text_encode_2.setTabChangesFocus(True)
        self.shifted_text_decode_2 = QPlainTextEdit(self.tab_3)
        self.shifted_text_decode_2.setObjectName(u"shifted_text_decode_2")
        self.shifted_text_decode_2.setGeometry(QRect(420, 350, 311, 131))
        self.shifted_text_decode_2.setTabChangesFocus(True)
        self.groupBox = QGroupBox(self.tab_3)
        self.groupBox.setObjectName(u"groupBox")
        self.groupBox.setGeometry(QRect(10, 10, 751, 61))
        self.note_svtc1 = QLabel(self.groupBox)
        self.note_svtc1.setObjectName(u"note_svtc1")
        self.note_svtc1.setGeometry(QRect(670, 20, 21, 21))
        self.note_svtc1_2 = QLabel(self.groupBox)
        self.note_svtc1_2.setObjectName(u"note_svtc1_2")
        self.note_svtc1_2.setGeometry(QRect(330, 20, 21, 21))
        self.infosvtc = QLabel(self.tab_3)
        self.infosvtc.setObjectName(u"infosvtc")
        self.infosvtc.setGeometry(QRect(750, 10, 21, 21))
        self.moreinforbck_2 = QLabel(self.tab_3)
        self.moreinforbck_2.setObjectName(u"moreinforbck_2")
        self.moreinforbck_2.setGeometry(QRect(0, 520, 271, 16))
        self.moreinforbck_2.setOpenExternalLinks(True)
        self.moreinforbck_3 = QLabel(self.tab_3)
        self.moreinforbck_3.setObjectName(u"moreinforbck_3")
        self.moreinforbck_3.setGeometry(QRect(530, 520, 271, 16))
        self.moreinforbck_3.setOpenExternalLinks(True)
        self.SVTC_to_file_button = QPushButton(self.tab_3)
        self.SVTC_to_file_button.setObjectName(u"SVTC_to_file_button")
        self.SVTC_to_file_button.setGeometry(QRect(260, 490, 81, 21))
        self.SVTC_to_file_button_2 = QPushButton(self.tab_3)
        self.SVTC_to_file_button_2.setObjectName(u"SVTC_to_file_button_2")
        self.SVTC_to_file_button_2.setGeometry(QRect(650, 490, 81, 21))
        self.tabWidget.addTab(self.tab_3, "")
        self.groupBox.raise_()
        self.label_4.raise_()
        self.n_spin_box.raise_()
        self.c_spin_box.raise_()
        self.label_9.raise_()
        self.d_spin_box.raise_()
        self.label_10.raise_()
        self.p_spin_box.raise_()
        self.label_11.raise_()
        self.line_5.raise_()
        self.label_12.raise_()
        self.shifted_encode_button.raise_()
        self.output_label_knuth_5.raise_()
        self.label_13.raise_()
        self.shifted_decode_button.raise_()
        self.checkBox.raise_()
        self.u_spin_box.raise_()
        self.label_23.raise_()
        self.output_label_knuth_9.raise_()
        self.shifted_text_encode.raise_()
        self.shifted_text_decode.raise_()
        self.shifted_text_encode_2.raise_()
        self.shifted_text_decode_2.raise_()
        self.infosvtc.raise_()
        self.moreinforbck_2.raise_()
        self.moreinforbck_3.raise_()
        self.SVTC_to_file_button.raise_()
        self.SVTC_to_file_button_2.raise_()
        self.tab_7 = QWidget()
        self.tab_7.setObjectName(u"tab_7")
        self.tab_7.setAutoFillBackground(True)
        self.groupBox_4 = QGroupBox(self.tab_7)
        self.groupBox_4.setObjectName(u"groupBox_4")
        self.groupBox_4.setGeometry(QRect(10, 10, 751, 61))
        self.nrb_assumptionbox = QComboBox(self.groupBox_4)
        self.nrb_assumptionbox.addItem("")
        self.nrb_assumptionbox.addItem("")
        self.nrb_assumptionbox.setObjectName(u"nrb_assumptionbox")
        self.nrb_assumptionbox.setGeometry(QRect(230, 20, 41, 20))
        sizePolicy1.setHeightForWidth(self.nrb_assumptionbox.sizePolicy().hasHeightForWidth())
        self.nrb_assumptionbox.setSizePolicy(sizePolicy1)
        self.label_31 = QLabel(self.groupBox_4)
        self.label_31.setObjectName(u"label_31")
        self.label_31.setGeometry(QRect(10, 10, 211, 41))
        self.label_32 = QLabel(self.groupBox_4)
        self.label_32.setObjectName(u"label_32")
        self.label_32.setGeometry(QRect(280, 10, 111, 41))
        self.label_33 = QLabel(self.groupBox_4)
        self.label_33.setObjectName(u"label_33")
        self.label_33.setGeometry(QRect(450, 10, 131, 41))
        self.label_36 = QLabel(self.groupBox_4)
        self.label_36.setObjectName(u"label_36")
        self.label_36.setGeometry(QRect(650, 10, 31, 41))
        self.ab_spinbox = QSpinBox(self.tab_7)
        self.ab_spinbox.setObjectName(u"ab_spinbox")
        self.ab_spinbox.setGeometry(QRect(400, 30, 51, 22))
        self.ab_spinbox.setMinimum(2)
        self.ab_spinbox.setMaximum(1000)
        self.imp_assumptionbox = QComboBox(self.tab_7)
        self.imp_assumptionbox.addItem("")
        self.imp_assumptionbox.addItem("")
        self.imp_assumptionbox.setObjectName(u"imp_assumptionbox")
        self.imp_assumptionbox.setGeometry(QRect(590, 30, 61, 20))
        sizePolicy1.setHeightForWidth(self.imp_assumptionbox.sizePolicy().hasHeightForWidth())
        self.imp_assumptionbox.setSizePolicy(sizePolicy1)
        self.line_8 = QFrame(self.tab_7)
        self.line_8.setObjectName(u"line_8")
        self.line_8.setGeometry(QRect(370, 80, 20, 451))
        self.line_8.setFrameShape(QFrame.VLine)
        self.line_8.setFrameShadow(QFrame.Sunken)
        self.label_34 = QLabel(self.tab_7)
        self.label_34.setObjectName(u"label_34")
        self.label_34.setGeometry(QRect(150, 90, 71, 21))
        self.label_34.setFont(font3)
        self.repeat_text_encode = QPlainTextEdit(self.tab_7)
        self.repeat_text_encode.setObjectName(u"repeat_text_encode")
        self.repeat_text_encode.setGeometry(QRect(30, 160, 311, 131))
        self.repeat_text_encode.setFocusPolicy(Qt.StrongFocus)
        self.repeat_text_encode.setTabChangesFocus(True)
        self.label_35 = QLabel(self.tab_7)
        self.label_35.setObjectName(u"label_35")
        self.label_35.setGeometry(QRect(540, 90, 71, 21))
        self.label_35.setFont(font4)
        self.repeat_text_decode = QPlainTextEdit(self.tab_7)
        self.repeat_text_decode.setObjectName(u"repeat_text_decode")
        self.repeat_text_decode.setGeometry(QRect(420, 160, 311, 131))
        self.repeat_text_decode.setFocusPolicy(Qt.StrongFocus)
        self.repeat_text_decode.setTabChangesFocus(True)
        self.repeat_decode_button = QPushButton(self.tab_7)
        self.repeat_decode_button.setObjectName(u"repeat_decode_button")
        self.repeat_decode_button.setGeometry(QRect(660, 300, 71, 21))
        self.repeat_encode_button = QPushButton(self.tab_7)
        self.repeat_encode_button.setObjectName(u"repeat_encode_button")
        self.repeat_encode_button.setGeometry(QRect(270, 300, 71, 21))
        self.repeat_text_encode_2 = QPlainTextEdit(self.tab_7)
        self.repeat_text_encode_2.setObjectName(u"repeat_text_encode_2")
        self.repeat_text_encode_2.setGeometry(QRect(30, 350, 311, 131))
        self.repeat_text_encode_2.setTabChangesFocus(True)
        self.output_label_repeat_13 = QLabel(self.tab_7)
        self.output_label_repeat_13.setObjectName(u"output_label_repeat_13")
        self.output_label_repeat_13.setGeometry(QRect(420, 310, 61, 41))
        self.output_label_repeat_13.setTextInteractionFlags(Qt.LinksAccessibleByMouse)
        self.repeat_text_decode_2 = QPlainTextEdit(self.tab_7)
        self.repeat_text_decode_2.setObjectName(u"repeat_text_decode_2")
        self.repeat_text_decode_2.setGeometry(QRect(420, 350, 311, 131))
        self.repeat_text_decode_2.setTabChangesFocus(True)
        self.output_label_repeat_14 = QLabel(self.tab_7)
        self.output_label_repeat_14.setObjectName(u"output_label_repeat_14")
        self.output_label_repeat_14.setGeometry(QRect(30, 310, 61, 41))
        self.output_label_repeat_14.setTextInteractionFlags(Qt.LinksAccessibleByMouse)
        self.infosvtc_2 = QLabel(self.tab_7)
        self.infosvtc_2.setObjectName(u"infosvtc_2")
        self.infosvtc_2.setGeometry(QRect(750, 10, 21, 21))
        self.log_assumptionbox = QComboBox(self.tab_7)
        self.log_assumptionbox.addItem("")
        self.log_assumptionbox.addItem("")
        self.log_assumptionbox.setObjectName(u"log_assumptionbox")
        self.log_assumptionbox.setGeometry(QRect(700, 30, 51, 20))
        sizePolicy1.setHeightForWidth(self.log_assumptionbox.sizePolicy().hasHeightForWidth())
        self.log_assumptionbox.setSizePolicy(sizePolicy1)
        self.moreinforbck_6 = QLabel(self.tab_7)
        self.moreinforbck_6.setObjectName(u"moreinforbck_6")
        self.moreinforbck_6.setGeometry(QRect(530, 520, 271, 16))
        self.moreinforbck_6.setOpenExternalLinks(True)
        self.moreinforbck_7 = QLabel(self.tab_7)
        self.moreinforbck_7.setObjectName(u"moreinforbck_7")
        self.moreinforbck_7.setGeometry(QRect(0, 520, 271, 16))
        self.moreinforbck_7.setOpenExternalLinks(True)
        self.repeat_to_file_button = QPushButton(self.tab_7)
        self.repeat_to_file_button.setObjectName(u"repeat_to_file_button")
        self.repeat_to_file_button.setGeometry(QRect(260, 490, 81, 21))
        self.repeat_to_file_button_2 = QPushButton(self.tab_7)
        self.repeat_to_file_button_2.setObjectName(u"repeat_to_file_button_2")
        self.repeat_to_file_button_2.setGeometry(QRect(650, 490, 81, 21))
        self.tabWidget.addTab(self.tab_7, "")

        self.horizontalLayout.addWidget(self.tabWidget)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)
        QWidget.setTabOrder(self.rho_box, self.tao_box)
        QWidget.setTabOrder(self.tao_box, self.strands_box)
        QWidget.setTabOrder(self.strands_box, self.b_force_box)
        QWidget.setTabOrder(self.b_force_box, self.browse_input_button)
        QWidget.setTabOrder(self.browse_input_button, self.run_button)
        QWidget.setTabOrder(self.run_button, self.sigma_len_box)
        QWidget.setTabOrder(self.sigma_len_box, self.knuth_text_encode)
        QWidget.setTabOrder(self.knuth_text_encode, self.balanced_knuth_encode_button)
        QWidget.setTabOrder(self.balanced_knuth_encode_button, self.sigma_len_box_2)
        QWidget.setTabOrder(self.sigma_len_box_2, self.encode_word_box)
        QWidget.setTabOrder(self.encode_word_box, self.knuth_text_decode)
        QWidget.setTabOrder(self.knuth_text_decode, self.balanced_decode_button)
        QWidget.setTabOrder(self.balanced_decode_button, self.n_spin_box)
        QWidget.setTabOrder(self.n_spin_box, self.c_spin_box)
        QWidget.setTabOrder(self.c_spin_box, self.shifted_encode_button)
        QWidget.setTabOrder(self.shifted_encode_button, self.shifted_decode_button)
        QWidget.setTabOrder(self.shifted_decode_button, self.checkBox)
        QWidget.setTabOrder(self.checkBox, self.u_spin_box)
        QWidget.setTabOrder(self.u_spin_box, self.browse_input_line_edit)
        QWidget.setTabOrder(self.browse_input_line_edit, self.p_spin_box)
        QWidget.setTabOrder(self.p_spin_box, self.knuth_text_encode_2)
        QWidget.setTabOrder(self.knuth_text_encode_2, self.d_spin_box)
        QWidget.setTabOrder(self.d_spin_box, self.knuth_text_decode_2)
        QWidget.setTabOrder(self.knuth_text_decode_2, self.shifted_text_encode)
        QWidget.setTabOrder(self.shifted_text_encode, self.shifted_text_decode)
        QWidget.setTabOrder(self.shifted_text_decode, self.shifted_text_encode_2)
        QWidget.setTabOrder(self.shifted_text_encode_2, self.shifted_text_decode_2)

        self.retranslateUi(MainWindow)

        self.tabWidget.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
#if QT_CONFIG(tooltip)
        self.rho.setToolTip(QCoreApplication.translate("MainWindow", u"a system parameters which are used to make assumptions about output strands", None))
#endif // QT_CONFIG(tooltip)
        self.rho.setText(QCoreApplication.translate("MainWindow", u"Rho", None))
        self.browse_input_button.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
#if QT_CONFIG(tooltip)
        self.tao.setToolTip(QCoreApplication.translate("MainWindow", u"a system parameters which are used to make assumptions about output strands", None))
#endif // QT_CONFIG(tooltip)
        self.tao.setText(QCoreApplication.translate("MainWindow", u"Tao", None))
#if QT_CONFIG(tooltip)
        self.strands_data_length.setToolTip(QCoreApplication.translate("MainWindow", u"an integer denoting the data length of the strands", None))
#endif // QT_CONFIG(tooltip)
        self.strands_data_length.setText(QCoreApplication.translate("MainWindow", u"Strands data length", None))
#if QT_CONFIG(tooltip)
        self.b_force.setToolTip(QCoreApplication.translate("MainWindow", u"denoting wether we're using brute force manner in the encoding algorithim", None))
#endif // QT_CONFIG(tooltip)
        self.b_force.setText(QCoreApplication.translate("MainWindow", u"Brute force", None))
        self.b_force_box.setItemText(0, QCoreApplication.translate("MainWindow", u"false", None))
        self.b_force_box.setItemText(1, QCoreApplication.translate("MainWindow", u"true", None))

#if QT_CONFIG(tooltip)
        self.test_input_file.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.test_input_file.setText(QCoreApplication.translate("MainWindow", u"Input File", None))
        self.run_button.setText(QCoreApplication.translate("MainWindow", u"Run", None))
#if QT_CONFIG(tooltip)
        self.infoccc.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Algorithm implemented by : Elon Grubman and Amit Weil</p><p>Algorithm invented by : Tal Shinkar,Eitan Yaakobi, Andreas Lenz, and Antonia Wachter-Zeh</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.infoccc.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/info2.png\"/></p></body></html>", None))
#if QT_CONFIG(whatsthis)
        self.moreinfoccc.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.moreinfoccc.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://yaakobi.wixsite.com/dnacodingsoftware/post/clustering-correcting-codes\"><span style=\" font-size:9pt; text-decoration: underline; color:#0000ff;\">click for more information about the algorithm</span></a></p></body></html>", None))
        self.moreinforbck_5.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://github.com/hadasabraham/CodingTool/wiki/Clustering-Correcting-Codes-Overview\"><span style=\" font-size:9pt; text-decoration: underline; color:#0000ff;\">click for 'how to' guide about the algorithm</span></a></p></body></html>", None))
        self.browse_output_button.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
#if QT_CONFIG(tooltip)
        self.test_output_file.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.test_output_file.setText(QCoreApplication.translate("MainWindow", u"output File", None))
#if QT_CONFIG(tooltip)
        self.encode_decode.setToolTip(QCoreApplication.translate("MainWindow", u"Choose encoder or decoder", None))
#endif // QT_CONFIG(tooltip)
        self.encode_decode.setText(QCoreApplication.translate("MainWindow", u"Encode/Decode", None))
        self.encode_decode_box.setItemText(0, QCoreApplication.translate("MainWindow", u"Encode", None))
        self.encode_decode_box.setItemText(1, QCoreApplication.translate("MainWindow", u"Decode", None))

#if QT_CONFIG(tooltip)
        self.ccc_label.setToolTip(QCoreApplication.translate("MainWindow", u"Applies CCC Algorithm to encode or decode", None))
#endif // QT_CONFIG(tooltip)
        self.ccc_label.setText(QCoreApplication.translate("MainWindow", u"CCC Encoder/Decoder", None))
#if QT_CONFIG(tooltip)
        self.generator_label.setToolTip(QCoreApplication.translate("MainWindow", u"Generates random binary strands", None))
#endif // QT_CONFIG(tooltip)
        self.generator_label.setText(QCoreApplication.translate("MainWindow", u"Random Strands Generator", None))
#if QT_CONFIG(tooltip)
        self.gen_output_file.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.gen_output_file.setText(QCoreApplication.translate("MainWindow", u"output File", None))
        self.browse_gen_output_button.setText(QCoreApplication.translate("MainWindow", u"Browse", None))
        self.generate_button.setText(QCoreApplication.translate("MainWindow", u"Generate", None))
#if QT_CONFIG(tooltip)
        self.strand_len.setToolTip(QCoreApplication.translate("MainWindow", u"Length of strands to generate", None))
#endif // QT_CONFIG(tooltip)
        self.strand_len.setText(QCoreApplication.translate("MainWindow", u"Strands data length", None))
#if QT_CONFIG(tooltip)
        self.strand_num.setToolTip(QCoreApplication.translate("MainWindow", u"Number of strands to generate", None))
#endif // QT_CONFIG(tooltip)
        self.strand_num.setText(QCoreApplication.translate("MainWindow", u"Strand No.", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), QCoreApplication.translate("MainWindow", u"Clustering-correcting-codes", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"Encode", None))
        self.label_2.setText(QCoreApplication.translate("MainWindow", u"Decode", None))
        self.sigma_len_label.setText(QCoreApplication.translate("MainWindow", u"Alphabet Size:", None))
        self.balanced_knuth_encode_button.setText(QCoreApplication.translate("MainWindow", u"Encode", None))
        self.output_label_knuth.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Output:</span></p></body></html>", None))
        self.len_decoded_word.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Length Decoded word:</p></body></html>", None))
        self.len_encoded_word.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Length Encoded word:</p></body></html>", None))
        self.sigma_len_label_2.setText(QCoreApplication.translate("MainWindow", u"Alphabet Size:", None))
        self.len_encoded_word_for_dec.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt;\">Length Encoded word:</span></p></body></html>", None))
        self.balanced_decode_button.setText(QCoreApplication.translate("MainWindow", u"Decode", None))
        self.output_label_knuth_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Output:</span></p></body></html>", None))
        self.knuth_text_encode.setPlainText("")
        self.knuth_text_encode.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Ender text", None))
        self.knuth_text_decode.setPlainText("")
        self.knuth_text_decode.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter text", None))
#if QT_CONFIG(tooltip)
        self.infobck.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Algorithm implemented by : Noa Marelly and Ohad Goudsmid </p><p>Algorithm invented by : Donald E. Knuth</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.infobck.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/info2.png\"/></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.notebck.setToolTip(QCoreApplication.translate("MainWindow", u"word length need to be mod 0 sigma length", None))
#endif // QT_CONFIG(tooltip)
        self.notebck.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/note4.png\"/></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.notebck_2.setToolTip(QCoreApplication.translate("MainWindow", u"word length need to be mod 0 sigma length", None))
#endif // QT_CONFIG(tooltip)
        self.notebck_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/note4.png\"/></p></body></html>", None))
        self.moreinforbck.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://yaakobi.wixsite.com/dnacodingsoftware/post/efficient-balanced-codes\"><span style=\" text-decoration: underline; color:#0000ff;\">click for more information about the algorithm</span></a></p></body></html>", None))
        self.moreinforbck_4.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://github.com/hadasabraham/CodingTool/wiki/Balanced-Codes-Knuth-Overview\"><span style=\" text-decoration: underline; color:#0000ff;\">click for 'how to' guide about the algorithm</span></a></p></body></html>", None))
        self.bck_to_file_button.setText(QCoreApplication.translate("MainWindow", u"extract to file", None))
        self.bck_to_file_button_2.setText(QCoreApplication.translate("MainWindow", u"extract to file", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), QCoreApplication.translate("MainWindow", u"BalancedCodesKnuth", None))
#if QT_CONFIG(tooltip)
        self.label_4.setToolTip(QCoreApplication.translate("MainWindow", u"n is a length of a codeword", None))
#endif // QT_CONFIG(tooltip)
        self.label_4.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">N:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.label_9.setToolTip(QCoreApplication.translate("MainWindow", u"c is the weighted sum", None))
#endif // QT_CONFIG(tooltip)
        self.label_9.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">C:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.label_10.setToolTip(QCoreApplication.translate("MainWindow", u"d is the parity", None))
#endif // QT_CONFIG(tooltip)
        self.label_10.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">D:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.label_11.setToolTip(QCoreApplication.translate("MainWindow", u"P is the maximum known distance of an error", None))
#endif // QT_CONFIG(tooltip)
        self.label_11.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">P:</span></p></body></html>", None))
        self.label_12.setText(QCoreApplication.translate("MainWindow", u"Encode", None))
        self.shifted_encode_button.setText(QCoreApplication.translate("MainWindow", u"Encode", None))
        self.output_label_knuth_5.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Output:</span></p></body></html>", None))
        self.label_13.setText(QCoreApplication.translate("MainWindow", u"Decode", None))
        self.shifted_decode_button.setText(QCoreApplication.translate("MainWindow", u"Decode", None))
#if QT_CONFIG(tooltip)
        self.checkBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-family:'-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji'; font-size:16px; color:#24292f; background-color:#ffffff;\">check the box if an insertion or deletion has occurred and set the error index in the U parameter</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.checkBox.setText(QCoreApplication.translate("MainWindow", u"Error index", None))
#if QT_CONFIG(tooltip)
        self.label_23.setToolTip(QCoreApplication.translate("MainWindow", u"error index if occurred", None))
#endif // QT_CONFIG(tooltip)
        self.label_23.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">U:</span></p></body></html>", None))
        self.output_label_knuth_9.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Output:</span></p></body></html>", None))
        self.shifted_text_encode.setPlainText("")
        self.shifted_text_encode.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter text", None))
        self.shifted_text_decode.setPlainText("")
        self.shifted_text_decode.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter text", None))
        self.groupBox.setTitle(QCoreApplication.translate("MainWindow", u"Params", None))
#if QT_CONFIG(tooltip)
        self.note_svtc1.setToolTip(QCoreApplication.translate("MainWindow", u"p must be O(log(n))", None))
#endif // QT_CONFIG(tooltip)
        self.note_svtc1.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/note4.png\"/></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.note_svtc1_2.setToolTip(QCoreApplication.translate("MainWindow", u"c must be smaller than n+1", None))
#endif // QT_CONFIG(tooltip)
        self.note_svtc1_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/note4.png\"/></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.infosvtc.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Algorithm implemented by : Guy Shapiraand maxim barsky</p><p>Algorithm invented by : <span style=\" font-family:'Calibri';\">Clayton Schoeny, Antonia Wachter-Zeh, Ryan Gabrys, Eitan Yaakobi</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.infosvtc.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/info2.png\"/></p></body></html>", None))
        self.moreinforbck_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://yaakobi.wixsite.com/dnacodingsoftware/post/new-typography-lines-you-need-to-know\"><span style=\" text-decoration: underline; color:#0000ff;\">click for more information about the algorithm</span></a></p></body></html>", None))
        self.moreinforbck_3.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://github.com/hadasabraham/CodingTool/wiki/Shifted-VT-Codes-Overview\"><span style=\" text-decoration: underline; color:#0000ff;\">click for 'how to' guide about the algorithm</span></a></p></body></html>", None))
        self.SVTC_to_file_button.setText(QCoreApplication.translate("MainWindow", u"extract to file", None))
        self.SVTC_to_file_button_2.setText(QCoreApplication.translate("MainWindow", u"extract to file", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), QCoreApplication.translate("MainWindow", u"Shifted VT-Codes", None))
        self.groupBox_4.setTitle(QCoreApplication.translate("MainWindow", u"Params", None))
        self.nrb_assumptionbox.setItemText(0, QCoreApplication.translate("MainWindow", u"1", None))
        self.nrb_assumptionbox.setItemText(1, QCoreApplication.translate("MainWindow", u"2", None))

#if QT_CONFIG(tooltip)
        self.label_31.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.label_31.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">number of redundancy bits:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.label_32.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.label_32.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">alphabet size:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.label_33.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.label_33.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">implementation:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.label_36.setToolTip(QCoreApplication.translate("MainWindow", u"when flag is on output verbosity increased and a detailed log is printed", None))
#endif // QT_CONFIG(tooltip)
        self.label_36.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">log:</span></p></body></html>", None))
        self.imp_assumptionbox.setItemText(0, QCoreApplication.translate("MainWindow", u"time", None))
        self.imp_assumptionbox.setItemText(1, QCoreApplication.translate("MainWindow", u"space", None))

        self.label_34.setText(QCoreApplication.translate("MainWindow", u"Encode", None))
        self.repeat_text_encode.setPlainText("")
        self.repeat_text_encode.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter text", None))
        self.label_35.setText(QCoreApplication.translate("MainWindow", u"Decode", None))
        self.repeat_text_decode.setPlainText("")
        self.repeat_text_decode.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter text", None))
        self.repeat_decode_button.setText(QCoreApplication.translate("MainWindow", u"Decode", None))
        self.repeat_encode_button.setText(QCoreApplication.translate("MainWindow", u"Encode", None))
        self.output_label_repeat_13.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Output:</span></p></body></html>", None))
        self.output_label_repeat_14.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Output:</span></p></body></html>", None))
#if QT_CONFIG(tooltip)
        self.infosvtc_2.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Algorithm implemented by : <span style=\" background-color:#ffffff;\">Antonio Abu Nassar and Rotem Samuel</span></p><p>Algorithm invented by : Ohad Elishco, Ryan Gabrys, Muriel Medard and<span style=\" font-family:'Calibri';\"> Eitan Yaakobi</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.infosvtc_2.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><img src=\":/images/info2.png\"/></p></body></html>", None))
        self.log_assumptionbox.setItemText(0, QCoreApplication.translate("MainWindow", u"no", None))
        self.log_assumptionbox.setItemText(1, QCoreApplication.translate("MainWindow", u"yes", None))

        self.moreinforbck_6.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://github.com/hadasabraham/CodingTool/wiki/Repeat-Free-Codes-Overview\"><span style=\" text-decoration: underline; color:#0000ff;\">click for 'how to' guide about the algorithm</span></a></p></body></html>", None))
        self.moreinforbck_7.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><a href=\"https://yaakobi.wixsite.com/dnacodingsoftware/post/repeat-free-codes\"><span style=\" text-decoration: underline; color:#0000ff;\">click for more information about the algorithm</span></a></p></body></html>", None))
        self.repeat_to_file_button.setText(QCoreApplication.translate("MainWindow", u"extract to file", None))
        self.repeat_to_file_button_2.setText(QCoreApplication.translate("MainWindow", u"extract to file", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_7), QCoreApplication.translate("MainWindow", u"RepeatFreeCodes", None))
    # retranslateUi

